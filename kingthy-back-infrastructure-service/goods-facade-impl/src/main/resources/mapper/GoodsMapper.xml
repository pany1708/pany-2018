<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kingthy.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.kingthy.entity.Goods">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="goods_feature" property="goodsFeature" jdbcType="VARCHAR"/>
        <result column="standard_price" property="standardPrice" jdbcType="DECIMAL"/>
        <result column="opus_sn" property="opusSn" jdbcType="VARCHAR"/>
        <result column="desinger" property="desinger" jdbcType="VARCHAR"/>
        <result column="return_point" property="returnPoint" jdbcType="INTEGER"/>
        <result column="put_on_method" property="putOnMethod" jdbcType="INTEGER"/>
        <result column="put_on_time" property="putOnTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="goods_category_uuid" property="goodsCategoryUuid" jdbcType="CHAR"/>
        <result column="goods_style_uuid" property="goodsStyleUuid" jdbcType="CHAR"/>
        <result column="goods_season_uuid" property="goodsSeasonUuid" jdbcType="CHAR"/>
        <result column="goods_details" property="goodsDetails" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="modifier" property="modifier" jdbcType="VARCHAR"/>
        <result column="opus_uuid" property="opusUuid" jdbcType="CHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="BIT"/>
        <result column="uuid" property="uuid" jdbcType="CHAR"/>
        <result column="cover" property="cover" jdbcType="VARCHAR"/>
        <result column="clicks" property="clicks" jdbcType="BIGINT"/>
        <result column="age_segment_uuid" property="fitAgeYoung" jdbcType="VARCHAR"/>
        <result column="attribute" property="attribute" jdbcType="VARCHAR"/>
        <result column="sn" property="sn" jdbcType="VARCHAR"/>
        <result column="goods_tags" property="goodsTags" jdbcType="LONGVARCHAR"/>
        <result column="goods_image" property="goodsImage" jdbcType="LONGVARCHAR"/>
        <result column="part_info" property="partInfo" jdbcType="LONGVARCHAR"/>
        <result column="materiel_info" property="materielInfo" jdbcType="LONGVARCHAR"/>
        <result column="accessories_info" property="accessoriesInfo" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <select id="queryMaterielInfoByUUID" parameterType="java.lang.String" resultType="com.kingthy.entity.Goods">
        SELECT materiel_info materielInfo, attribute, goods_style_uuid goodsStyleUuid,
         goods_category_type goodsCategoryType FROM goods WHERE uuid = #{uuid} AND del_flag = FALSE
    </select>

    <select id="queryDesingerByUUID" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT desinger FROM goods WHERE uuid = #{uuid} AND del_flag = FALSE
    </select>

    <select id="queryGoodsByUUID" parameterType="java.lang.String" resultType="com.kingthy.entity.Goods">
      SELECT goods_image goodsImage,uuid,standard_price standardPrice,goods_name goodsName,cover FROM goods WHERE uuid = #{uuid} AND del_flag = FALSE
    </select>

    <select id="selectGoodsListByGoodsIds" parameterType="java.util.List" resultType="com.kingthy.dto.GoodsOrderDTO">

        SELECT
        b.`status`,
        b.del_flag delFlag,
        b.standard_price standardPrice,
        b.goods_name goodsName,
        b.uuid goodsUuid
        FROM
        goods b
        <where>
            <if test="list != null  and list.size()>0 ">
                and b.uuid in
                <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <update id="updateGoodsClicks" parameterType="com.kingthy.entity.Goods">
		UPDATE goods a SET a.clicks = IF(a.clicks IS NULL, 0, a.clicks) + #{clicks}, a.modify_date = NOW(), a.version = IF(a.version IS NULL, 0, a.version) + 1
		WHERE a.uuid = #{uuid} AND a.version = #{version}
	</update>

    <select id="selectVersionByGoodsUuid" resultType="com.kingthy.entity.Goods">
        SELECT a.uuid, a.version FROM goods a

        <where>
            a.del_flag = 0 AND a.`status` = 1
            <if test="list != null  and list.size()>0 ">
                and a.uuid in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectGoodsUuid" resultType="com.kingthy.entity.Goods">
        SELECT a.uuid, a.version, a.status,
        a.desinger,
        a.goods_name goodsName,
        a.goods_feature goodsFeature,
        a.standard_price standardPrice,
        a.goods_image goodsImage FROM goods a

        <where>
            a.del_flag = 0 AND a.`status` = 1
            <if test="list != null  and list.size()>0 ">
                and a.uuid in
                <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getGoodsListByIds" resultType="com.kingthy.entity.Goods">
        select
        uuid,
        goods_category_uuid goodsCategoryUuid,
        goods_name goodsName,
        goods_image goodsImage,
        standard_price standardPrice,
        desinger,
        opus_sn opusSn,
        opus_uuid opusUuid,
        status,
        goods_details goodsDetails
        from goods
        <where>
            <if test="productUuids != null  and productUuids.size()>0 ">
                and uuid in
                <foreach collection="productUuids" item="uuid" open="(" separator="," close=")">
                    #{uuid}
                </foreach>
            </if>
        </where>

    </select>

    <select id="getGoodsCoverListByIds" resultType="com.kingthy.dto.GoodsDTO$CoverInfo">
        SELECT a.uuid,a.cover,a.materiel_info materielInfo FROM goods a
        <where>
            <if test="productUuids != null  and productUuids.size()>0 ">
                and a.uuid in
                <foreach collection="productUuids" item="uuid" open="(" separator="," close=")">
                    #{uuid}
                </foreach>
            </if>
        </where>
    </select>

    <!-- 分页查询商品信息 -->
    <select id="findByPage" parameterType="com.kingthy.request.GoodsPageReq" resultType="com.kingthy.dto.GoodsPageDto">
        select
        g.uuid,g.goods_name as goodsName,
        g.goods_category_uuid as goodsCategoryUuid,
        g.standard_price as standardPrice,
        g.status,g.desinger,g.cover, g.sn,
        g.create_date createDate
        from goods g
        where g.del_flag is false

        <if test="goodsCategoryUuid != null and goodsCategoryUuid !='' ">
            and g.goods_category_uuid = #{goodsCategoryUuid}
        </if>
        <if test="goodsStyleUuid != null and goodsStyleUuid !='' ">
            and g.goods_style_uuid = #{goodsStyleUuid}
        </if>
        <if test="goodsSeasonUuid != null and goodsSeasonUuid !='' ">
            and g.goods_season_uuid = #{goodsSeasonUuid}
        </if>
        <if test="status != null ">
            and g.status = #{status}
        </if>
        <if test="goodsName != null and goodsName !='' ">
            and g.goods_name like concat('%',#{goodsName},'%')
        </if>
        <if test="userList != null  and userList.size()>0 ">
            and g.desinger in
            <foreach item="item" index="index" collection="userList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="beginTime != null and beginTime != ''">
            AND unix_timestamp(g.create_date) * 1000 &gt;= #{beginTime}
        </if>

        <if test="endTime != null and endTime != ''">
            AND unix_timestamp(g.create_date) * 1000 &lt; #{endTime}
        </if>

        <if test="priceMin != null">
            AND g.standard_price &gt;= #{priceMin}
        </if>

        <if test="priceMax != null">
            AND g.standard_price &lt;= #{priceMax}
        </if>

        <if test="goodsCategoryType != null">
            AND g.goods_category_type = #{goodsCategoryType}
        </if>

        ORDER BY g.`create_date` DESC
    </select>

    <!-- 改变商品delFlag状态 ，如果状态不为空，则同时更改状态-->
    <update id="changeDelFlagBatch" parameterType="java.util.Map">
        update goods g set
        g.del_flag= #{delFlag},
        g.modify_date = #{modifyDate},
        <if test="status != null">
            g.status = #{status},
        </if>
        g.modifier =#{modifier}
        <where>
            <if test="uuidArray != null and uuidArray.lenght>0">
                g.uuid in
                <foreach collection="uuidArray" item="goodsUuid" index="" open="(" close=")" separator=",">
                    #{goodsUuid}
                </foreach>
            </if>
        </where>

    </update>

    <!-- 分页查询进入回收站的商品 -->
    <select id="findDelByPage" parameterType="com.kingthy.request.DelGoodsPageReq"
            resultType="com.kingthy.dto.GoodsPageDto">
        select g.uuid,
        g.goods_name as goodsName,
        g.goods_category_uuid as goodsCategoryUuid,
        g.standard_price as standardPrice,
        g.status,
        g.desinger,
        g.cover
        from goods g
        where g.del_flag is true
        <if test="searchName != null and searchName!='' ">
            and (
            g.goods_name like concat('%',#{searchName},'%')
            <if test=" memberUuids != null and memberUuids.size()>0">
                or g.desinger in
                <foreach collection="memberUuids" item="memberUuid" index="" open="(" close=")" separator=",">
                    #{memberUuid}
                </foreach>
            </if>

            )
        </if>
        ORDER BY g.`create_date` DESC
    </select>

    <!-- 批量物理删除 -->
    <delete id="deleteBatch" parameterType="java.util.Map">
        delete from goods where uuid in
        <foreach collection="uuidArray" item="goodsUuid" index="" open="(" close=")" separator=",">
            #{goodsUuid}
        </foreach>
    </delete>

    <!-- 批量上下架 -->
    <update id="upOrDownBatch" parameterType="java.util.Map">
        update goods g set
        g.status= #{status},
        g.modify_date = #{modifyDate},
        g.modifier = #{modifier}
        where g.uuid in
        <foreach collection="uuidArray" item="goodsUuid" index="" open="(" close=")" separator=",">
            #{goodsUuid}
        </foreach>
    </update>

    <select id="queryUUidByEsGoods" resultType="java.lang.String" parameterType="com.kingthy.request.EsGoodsReq">
		SELECT a.uuid FROM goods a WHERE a.del_flag = FALSE AND a.goods_name NOT LIKE '%测试%' AND a.`status` = 1
	</select>
    <select id="findGoodsByPage" parameterType="com.kingthy.entity.Goods" resultType="com.kingthy.entity.Goods">
        SELECT id, create_date createDate, modify_date modifyDate, goods_name goodsName, goods_feature goodsFeature, standard_price standardPrice,
        opus_sn opusSn,
        desinger, return_point returnPoint, status, goods_category_uuid goodsCategoryUuid, goods_style_uuid goodsStyleUuid, version, creator,
        modifier, opus_uuid opusUuid, del_flag delFlag, uuid, cover, clicks, attribute, sn, age_segment_uuid ageSegmentUuid,
        goods_category_type goodsCategoryType, goods_category_name goodsCategoryName, file_url fileUrl, officially_flag officiallyFlag, is_private isPrivate,
        goods_image goodsImage, part_info partInfo, materiel_info materielInfo, accessories_info accessoriesInfo, goods_details goodsDetails
        FROM goods
        WHERE del_flag is FALSE
        <if test=" goodsName !=null and goodsName !='' ">
            AND goods_name LIKE concat('%',#{goodsName},'%')
        </if>
        <if test=" standardPrice != null and standardPrice !='' ">
            AND standard_price LIKE concat('%',#{standardPrice},'%')
        </if>
        <if test=" sn !=null and sn !='' ">
            AND sn LIKE concat('%',#{sn},'%')
        </if>
        <if test=" opusSn !=null and opusSn !='' ">
            AND opus_sn LIKE concat('%',#{opusSn},'%')
        </if>
        <if test=" status !=null and status !='' ">
            AND status LIKE concat('%',#{status},'%')
        </if>
        <if test=" goodsCategoryType !=null and goodsCategoryType !='' ">
            AND goods_category_type LIKE concat('%',#{goodsCategoryType},'%')
        </if>
        <if test=" desinger !=null and desinger !='' ">
            AND desinger LIKE concat('%',#{desinger},'%')
        </if>
        <if test=" uuid !=null and uuid !='' ">
            AND uuid LIKE concat('%',#{uuid},'%')
        </if>
        <if test=" opusUuid !=null and opusUuid !='' ">
            AND opus_uuid LIKE concat('%',#{opusUuid},'%')
        </if>
        ORDER BY create_date DESC
    </select>

    <select id="findGoodsByPage_COUNT" parameterType="com.kingthy.entity.Goods" resultType="java.lang.Long">
        SELECT COUNT(uuid)
        FROM goods
        WHERE del_flag is FALSE
        <if test=" goodsName !=null and goodsName !='' ">
            AND goods_name LIKE concat('%',#{goodsName},'%')
        </if>
        <if test=" standardPrice != null and standardPrice !='' ">
            AND standard_price LIKE concat('%',#{standardPrice},'%')
        </if>
        <if test=" sn !=null and sn !='' ">
            AND sn LIKE concat('%',#{sn},'%')
        </if>
        <if test=" opusSn !=null and opusSn !='' ">
            AND opus_sn LIKE concat('%',#{opusSn},'%')
        </if>
        <if test=" status !=null and status !='' ">
            AND status LIKE concat('%',#{status},'%')
        </if>
        <if test=" goodsCategoryType !=null and goodsCategoryType !='' ">
            AND goods_category_type LIKE concat('%',#{goodsCategoryType},'%')
        </if>
        <if test=" desinger !=null and desinger !='' ">
            AND desinger LIKE concat('%',#{desinger},'%')
        </if>
        <if test=" uuid !=null and uuid !='' ">
            AND uuid LIKE concat('%',#{uuid},'%')
        </if>
        <if test=" opusUuid !=null and opusUuid !='' ">
            AND opus_uuid LIKE concat('%',#{opusUuid},'%')
        </if>
        ORDER BY create_date DESC
    </select>

    <select id="queryIncrementGoods" resultMap="BaseResultMap">
        SELECT create_date,modify_date,goods_name,goods_feature,standard_price,opus_sn,desinger,return_point,status,
        goods_category_uuid,goods_style_uuid,creator,modifier,opus_uuid,del_flag,cover,clicks,attribute,sn,
        age_segment_uuid,goods_category_type,goods_category_name,file_url,goods_image,part_info,materiel_info,
        accessories_info,goods_details,is_private,uuid,officially_flag from goods a
        WHERE a.modify_date &lt;= FROM_UNIXTIME(#{referenceTime})
        ORDER BY a.modify_date DESC,a.id DESC
    </select>
</mapper>