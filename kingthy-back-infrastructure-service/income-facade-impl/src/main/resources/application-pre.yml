server.port:   ${pre.server.port:7400}
#server:
#  ssl:
#    key-store: classpath:keystore.p12
#    key-store-password: 123456
#    keyStoreType: PKCS12
#    keyAlias: tomcat
spring:
  datasource: 
    type: com.zaxxer.hikari.HikariDataSource
    url: ${pre.spring.datasource.url:jdbc:mysql://192.168.7.193:8066/zmshop_income?characterEncoding=UTF-8 }
    username: ${pre.spring.datasource.username:root}
    password: ${pre.spring.datasource.password:$RFV5tgb}
    driver-class-name: com.mysql.jdbc.Driver
    hikari: 
      connection-test-query: ${pre.spring.datasource.hikari.connection-test-query:select user()}
      connection-timeout: ${pre.spring.datasource.hikari.connection-timeout:30000}
      idle-timeout: ${pre.spring.datasource.hikari.idle-timeout:60000}
      max-lifetime: ${pre.spring.datasource.hikari.max-lifetime:1800000}
      maximum-pool-size: ${pre.spring.datasource.hikari.maximum-pool-size:10}
      minimum-idle: ${pre.spring.datasource.hikari.minimum-idle:10}
  application:
    name: ${pre.spring.application.name:dubbo-provider-income}
  redis:
             database: ${pre.spring.redis.database:1}
             host: ${pre.spring.redis.host:192.168.1.225}
             port: ${pre.spring.redis.port:6379}
             password: ${pre.spring.redis.password:myredis}
             timeout: ${pre.spring.redis.timeout:0}
             pool:
                 max-active: ${pre.spring.redis.pool.max-active:20}
                 min-idle: ${pre.spring.redis.pool.min-idle:5}
                 max-idle: ${pre.spring.redis.pool.max-idle:10}
                 max-wait: ${pre.spring.redis.pool.max-wait:-1}
  rabbitmq:
    host: ${pre.rabbitmq.host:192.168.1.148}
    port: ${pre.rabbitmq.port:5672}
    username: ${pre.rabbitmq.username:admin}
    password: ${pre.rabbitmq.password:Jxkj2016}
  dubbo:
    application.name: ${pre.dubbo.application.name:income-facade-impl}
    registry.address: ${pre.dubbo.registry.address:zookeeper://192.168.7.185:2181}
    protocol.name: ${pre.dubbo.protocol.name:dubbo}
    protocol.port: ${pre.dubbo.protocol.prot:20884}
    scan: ${pre.dubbo.registry.scan:com.kingthy.dubbo.service.impl}
logging:
  level:
    com.kingthy.service.impl: ${pre.logging.level.com.kingthy.service.impl:ERROR}
     