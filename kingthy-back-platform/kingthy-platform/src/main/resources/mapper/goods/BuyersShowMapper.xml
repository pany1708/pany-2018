<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kingthy.platform.mapper.goods.BuyersShowMapper">
    <resultMap id="BaseResultMap" type="com.kingthy.platform.entity.goods.BuyersShow">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uuid" property="uuid" jdbcType="CHAR"/>
        <result column="order_sn" property="orderSn" jdbcType="VARCHAR"/>
        <result column="order_uuid" property="orderUuid" jdbcType="CHAR"/>
        <result column="goods_uuid" property="goodsUuid" jdbcType="CHAR"/>
        <result column="member_name" property="memberName" jdbcType="VARCHAR"/>
        <result column="member_uuid" property="memberUuid" jdbcType="CHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="modifier" property="modifier" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP"/>
        <result column="del_flag" property="delFlag" jdbcType="BIT"/>
        <result column="anonymous_flag" property="anonymousFlag" jdbcType="BIT"/>
        <result column="ip" property="ip" jdbcType="CHAR"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="status" jdbcType="BIT" property="status"/>
    </resultMap>
    <resultMap id="BuyersShowDto" type="com.kingthy.platform.dto.goods.BuyersShowDto" extends="BaseResultMap">
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectCommentByUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM buyers_show a WHERE a.order_uuid = #{uuid} AND a.del_flag = 0
    </select>

    <select id="selectList" parameterType="com.kingthy.platform.dto.goods.ReviewReq" resultMap="BuyersShowDto">
        select bs.uuid,member_name,member_uuid,order_uuid,goods_uuid,g.goods_name as goods_name,bs.create_date,bs.creator,
        anonymous_flag,content,bs.status,bs.ip from buyers_show bs left join goods g on bs.goods_uuid = g.uuid
        <trim prefix="where" prefixOverrides="and">
            and bs.del_flag is FALSE
            <if test="content != null  and content != ''">and bs.content like concat("%",#{content},"%")</if>
            <if test="reviewUuid != null and reviewUuid != ''">and bs.uuid = #{reviewUuid}</if>
            <if test="goodsName != null and goodsName != ''">
                AND g.goods_name LIKE concat("%",#{goodsName},"%")
            </if>
            <if test="status != null and status != ''">
                AND bs.status = #{status}
            </if>
            <if test="memberName != null and memberName != ''">
                AND bs.member_name = #{memberName}
            </if>
            <if test="beginDate != null and beginDate != ''">
                AND unix_timestamp(bs.create_date) * 1000 &gt;= #{beginDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND unix_timestamp(bs.create_date) * 1000 &lt; #{endDate}
            </if>
        </trim>
        order by bs.create_date desc
    </select>
    
    <update id="update" parameterType="map">
         update buyers_show set modifier = #{modifier},modify_date= CURRENT_TIMESTAMP
         <choose>
             <when test="null != status">,status = #{status}</when>
             <otherwise>,del_flag = #{delFlag}</otherwise>
         </choose>
        where `uuid` IN
        <foreach collection="reviewUuids" item="reviewUuid" separator="," open="(" close=")">
            #{reviewUuid}
        </foreach>
    </update>
</mapper>