<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kingthy.platform.mapper.goods.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.kingthy.platform.entity.goods.Goods" >
	  <id column="id" property="id" jdbcType="INTEGER" />
	  <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
	  <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
	  <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
	  <result column="goods_feature" property="goodsFeature" jdbcType="VARCHAR" />
	  <result column="standard_price" property="standardPrice" jdbcType="DECIMAL" />
	  <result column="opus_sn" property="opusSn" jdbcType="VARCHAR" />
	  <result column="desinger" property="desinger" jdbcType="VARCHAR" />
	  <result column="return_point" property="returnPoint" jdbcType="INTEGER" />
	  <result column="put_on_method" property="putOnMethod" jdbcType="INTEGER" />
	  <result column="put_on_time" property="putOnTime" jdbcType="TIMESTAMP" />
	  <result column="status" property="status" jdbcType="INTEGER" />
	  <result column="goods_category_uuid" property="goodsCategoryUuid" jdbcType="CHAR" />
	  <result column="goods_style_uuid" property="goodsStyleUuid" jdbcType="CHAR" />
	  <result column="goods_season_uuid" property="goodsSeasonUuid" jdbcType="CHAR" />
	  <result column="goods_details" property="goodsDetails" jdbcType="VARCHAR" />
	  <result column="version" property="version" jdbcType="INTEGER" />
	  <result column="creator" property="creator" jdbcType="VARCHAR" />
	  <result column="modifier" property="modifier" jdbcType="VARCHAR" />
	  <result column="opus_uuid" property="opusUuid" jdbcType="CHAR" />
	  <result column="del_flag" property="delFlag" jdbcType="BIT" />
	  <result column="uuid" property="uuid" jdbcType="CHAR" />
	  <result column="cover" property="cover" jdbcType="VARCHAR" />
	  <result column="clicks" property="clicks" jdbcType="BIGINT" />
	  <result column="age_segment_uuid" property="fitAgeYoung" jdbcType="VARCHAR" />
	  <result column="attribute" property="attribute" jdbcType="VARCHAR" />
	  <result column="sn" property="sn" jdbcType="VARCHAR" />
	  <result column="goods_tags" property="goodsTags" jdbcType="LONGVARCHAR" />
	  <result column="goods_image" property="goodsImage" jdbcType="LONGVARCHAR" />
	  <result column="part_info" property="partInfo" jdbcType="LONGVARCHAR" />
	  <result column="materiel_info" property="materielInfo" jdbcType="LONGVARCHAR" />
	  <result column="accessories_info" property="accessoriesInfo" jdbcType="LONGVARCHAR" />
  </resultMap>

	<select id="selectGoodsInfoByUuid" parameterType="java.lang.String" resultType="com.kingthy.platform.dto.goods.GoodsPageDto$GoodsDetailDto">
		SELECT
			a.goods_name goodsName,
			a.goods_image goodsImage,
			a.standard_price standardPrice,
			b.user_name designer,
			c.class_name className,
			a.attribute,
			a.part_info partInfo,
			a.materiel_info materielInfo,
			a.accessories_info accessoriesInfo,
			a.goods_details goodsDetailImage
		FROM
			goods a
			LEFT JOIN member b ON b.uuid = a.desinger
			LEFT JOIN class_category c ON c.uuid = a.goods_category_uuid
		WHERE
			a.del_flag = 0 AND a.uuid = #{goodsUuid}

	</select>

	<select id="findGoodsInfoByUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from goods WHERE del_flag is false;
	</select>
  
  <!-- 分页查询商品信息 -->
  <select id="findByPage" parameterType="com.kingthy.platform.dto.goods.GoodsPageReq" resultType="com.kingthy.platform.dto.goods.GoodsPageDto">
  		select g.uuid,g.goods_name as goodsName,g.goods_category_uuid as goodsCategoryUuid,c.class_name AS className,
	  	g.standard_price as standardPrice,g.status,m.user_name as desinger,g.cover, g.sn,g.create_date createDate
  		from goods g
  		LEFT JOIN class_category c ON g.`goods_category_uuid`=c.`uuid`
	  	LEFT JOIN member m ON  g.`desinger` = m.`uuid`
  		where g.del_flag is false
  		<if test="goodsCategoryUuid != null and goodsCategoryUuid !='' ">
  			and g.goods_category_uuid = #{goodsCategoryUuid}
  		</if>
  		<if test="goodsStyleUuid != null and goodsStyleUuid !='' ">
  			and g.goods_style_uuid = #{goodsStyleUuid}
  		</if>
  		<if test="goodsSeasonUuid != null and goodsSeasonUuid !='' ">
  			and g.goods_season_uuid = #{goodsSeasonUuid}
  		</if>
  		<if test="status != null ">
  			and g.status = #{status}
  		</if>
  		<if test="goodsName != null and goodsName !='' ">
  			and g.goods_name like concat('%',#{goodsName},'%')
  		</if>
  		<if test="desinger != null and desinger !='' ">
  			and m.user_name like concat('%',#{desinger},'%')
  		</if>
	  <if test="beginTime != null and beginTime != ''">
			AND unix_timestamp(g.create_date) * 1000 &gt;= #{beginTime}
	  </if>

	  <if test="endTime != null and endTime != ''">
		  AND unix_timestamp(g.create_date) * 1000 &lt; #{endTime}
	  </if>

	  <if test="priceMin != null">
			AND g.standard_price &gt;= #{priceMin}
	  </if>

	  <if test="priceMax != null">
		  AND g.standard_price &lt;= #{priceMax}
	  </if>

	  <if test="goodsCategoryType != null">
		  AND g.goods_category_type = #{goodsCategoryType}
	  </if>

  		ORDER BY g.`create_date` DESC
  </select>
  
  <!-- 分页查询进入回收站的商品 -->
  <select id="findDelByPage" parameterType="com.kingthy.platform.dto.goods.DelGoodsPageReq" resultType="com.kingthy.platform.dto.goods.GoodsPageDto">
  		select g.uuid,g.goods_name as goodsName,g.goods_category_uuid as goodsCategoryUuid,c.class_name AS className,g.standard_price as standardPrice,g.status,m.user_name as desinger,g.cover
  		from goods g
  		LEFT JOIN class_category c ON g.`goods_category_uuid`=c.`uuid`
	  	LEFT JOIN member m ON  g.`desinger` = m.`uuid`
  		where g.del_flag is true
  		<if test="searchName != null and searchName!='' ">
  			and (
  			g.goods_name like concat('%',#{searchName},'%')
  			or g.desinger like concat('%',#{searchName},'%')
  			)
  		</if>
  		ORDER BY g.`create_date` DESC
  </select>
  
  <!-- 改变商品delFlag状态 ，如果状态不为空，则同时更改状态-->
  <update id="changeDelFlagBatch" parameterType="java.util.Map">
  	update goods g set
  		g.del_flag= #{delFlag},
  		g.modify_date = #{modifyDate},
  		<if test="status != null">
  		g.status = #{status},
  		</if>
  		g.modifier =#{modifier}
  		where g.uuid in
  		<foreach collection="uuidArray" item="goodsUuid" index="" open="(" close=")" separator=",">
				#{goodsUuid}
		</foreach>
  </update>
  
  <!-- 批量物理删除 -->
  <delete id="deleteBatch" parameterType="java.util.Map">
  	delete from goods where uuid in
  	<foreach collection="uuidArray" item="goodsUuid" index="" open="(" close=")" separator=",">
				#{goodsUuid}
	</foreach>
  </delete>
  
  <!-- 批量上下架 -->
  <update id="upOrDownBatch" parameterType="java.util.Map">
  	update goods g set
  		g.status= #{status},
  		g.modify_date = #{modifyDate},
  		g.modifier = #{modifier}
  		where g.uuid in
  	<foreach collection="uuidArray" item="goodsUuid" index="" open="(" close=")" separator=",">
				#{goodsUuid}
	</foreach>	
  </update>
  
  <!-- 批量更新商品上架状态 -->
  <update id="updateStatusBatch" parameterType="java.util.Map">
  	update goods g set
  		g.status= #{status},
  		g.modify_date = #{modifyDate},
  		g.modifier = #{modifier}
  		where g.uuid in
  		<foreach collection="goodsPutonScannerList" item="goodsPutonScanner" index="" open="(" close=")" separator=",">
				#{goodsPutonScanner.goodsUuid}
		</foreach>
  </update>
  
  <select id="findGoodsByUuid" parameterType="java.lang.String" resultType="com.kingthy.platform.dto.goods.GoodsDto">
  	SELECT g.`accessories_info` AS accessoriesInfo,m.`user_name` AS desinger,g.`goods_category_uuid` AS goodsCategoryUuid,c.class_name AS className,
  	g.`goods_details` AS goodsDetails,g.`goods_feature` AS goodsFeature,g.`goods_image` AS goodsImage,g.`goods_name` AS goodsName,g.`goods_season_uuid` AS goodsSeasonUuid,
  	sc.`class_name` AS seasonName,g.`goods_style_uuid` AS goodsStyleUuid,st.`class_name`AS styleName,
	g.`goods_tags` AS goodsTags,g.`materiel_info` AS materielInfo,g.`opus_sn` AS opusSn,g.`opus_uuid` AS opusUuid,g.`part_info` AS partInfo,g.`put_on_method` AS putOnMethod,
	g.`put_on_time` AS putOnTime,g.`return_point` AS returnPoint,g.`standard_price` AS standardPrice,g.`status`,g.`cover`,g.`uuid` FROM goods g
	LEFT JOIN class_category c ON g.`goods_category_uuid`=c.`uuid`
	LEFT JOIN style_category st ON g.`goods_style_uuid`=st.`uuid`
	LEFT JOIN season_category sc ON g.`goods_season_uuid`=sc.`uuid`
	LEFT JOIN member m ON g.`desinger`=m.`uuid`
 	WHERE g.`uuid`=#{uuid}
  </select>
</mapper>