<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kingthy.platform.mapper.basedata.ClassCategoryMapper" >
  <resultMap id="BaseResultMap" type="com.kingthy.platform.entity.basedata.ClassCategory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="orders" property="orders" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="CHAR" />
    <result column="parent_id" property="parentId" jdbcType="CHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="tree_path" property="treePath" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="BIT" />
    <result column="goods_num" property="goodsNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, modify_date, version, orders, grade, uuid, parent_id, class_name, 
    tree_path, status, description, creator, modifier, del_flag, goods_num
  </sql>

  <!-- 批量更新节点的父节点id -->
  <update id="updateParentIdBatch" parameterType="java.util.Map">
    update class_category c set
    c.parent_id=#{target},
    c.modify_date = #{modifyDate},
    c.modifier = #{modifier}
    where
    c.parent_id=#{source}
    and
    c.del_flag is false
  </update>

  <!-- 根据根节点uuid查询其所有子孙节点，包括他自己的uuid -->
  <select id="findChildUuidsByParentId" resultType="java.lang.String" parameterType="java.lang.String">
    SELECT getChild_class_category(#{parentId});
  </select>

  <!-- 批量更新节点状态 -->
  <update id="updateStatusBatch" parameterType="java.util.Map">
    update class_category c set
    c.status=#{status},
    c.modify_date = #{modifyDate},
    c.modifier = #{modifier}
    where
    c.uuid
    in
    <foreach collection="uuidString" item="categoryUuid" index="" open="(" close=")" separator=",">
      #{categoryUuid}
    </foreach>
  </update>

  <!-- 批量修改节点层级 -->
  <update id="updateGradeBatch" parameterType="java.util.Map">
    update class_category c set
    c.grade = c.grade + #{gradeChange}
    where
    c.del_flag is false
    and
    c.uuid
    in
    <foreach collection="uuidString" item="categoryUuid" index="" open="(" close=")" separator=",">
      #{categoryUuid}
    </foreach>
  </update>

  <!-- 根据uuid修改单个节点的父节点 -->
  <update id="updateParentId" parameterType="java.util.Map">
    update class_category c set
    c.parent_id = #{newParentId}
    where
    c.del_flag is false
    and
    c.uuid = #{uuid}
  </update>

  <!-- 修改单个节点信息：描述、分类名等 -->
  <update id="updateCategory" parameterType="com.kingthy.platform.entity.basedata.ClassCategory">
    update class_category c set
    c.class_name = #{className},
    c.description = #{description},
    c.modify_date = #{modifyDate},
    c.modifier = #{modifier}
    where
    c.del_flag is false
    and
    c.uuid = #{uuid}
  </update>

  <update id ="updateGoodsNum">
    UPDATE class_category cc
    SET
    cc.goods_num = (
    SELECT
    COUNT(g.id)c
    FROM
    goods g
    WHERE
    goods_category_uuid = cc.uuid
    )
  </update>

  <select id="getTree" resultType="com.kingthy.platform.dto.basedata.CategoryTreeDto">
    select class_name as className,grade,`uuid`,parent_id as parentId from class_category
    where
    del_flag is false
  </select>
</mapper>