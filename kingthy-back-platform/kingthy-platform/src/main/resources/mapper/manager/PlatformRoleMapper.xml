<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kingthy.platform.mapper.manager.PlatformRoleMapper" >
  <resultMap id="BaseResultMap" type="com.kingthy.platform.entity.manager.PlatformRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="CHAR" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="modify_date" property="modifyDate" jdbcType="DATE" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="BIT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <!-- 分页查询角色信息并按创建时间排序 -->
 <select id="findByPage" resultMap="BaseResultMap" parameterType="com.kingthy.platform.dto.manager.PlatformRolePageReq">
 	select uuid,role_name,description from platform_role
 	where del_flag is false
 	<if test="roleName != null and roleName !='' ">
 		and role_name like concat('%',#{roleName},'%')
 	</if>
 	order by create_date desc
 </select>
 
 <!-- 根据角色uuid查询角色信息 -->
  <select id="findByUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
  select uuid,role_name,description from platform_role
 	where del_flag is false
  	and uuid = #{uuid}
  </select>
  
  <!-- 根据用户名查询其角色 -->
  <select id="findRolesByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	SELECT pr.uuid uuid,pr.role_name role_name FROM `platform_role` pr INNER JOIN
	(
	SELECT pur.`role_uuid` AS role_uuid FROM `platform_user` pu INNER JOIN 
	`platform_user_role` pur ON pu.`uuid`=pur.`user_uuid` 
	WHERE pu.`user_name`=#{userName}
	AND pu.`del_flag`=false)a 
	ON pr.`uuid` = a.role_uuid
  </select>
  
  <!-- 给角色分配菜单权限 -->
  <insert id="assigned" parameterType="java.util.Map">
  	insert into platform_role_menu
  	(role_uuid,menu_uuid)
  	values
	<foreach collection="menuUuidList" item="menuUuid" index="" separator=",">
			(#{roleUuid},#{menuUuid})
	</foreach>
  </insert>
  
  <!-- 根据角色uuid查询其拥有的菜单权限 -->
  <select id="findMenuByRole" parameterType="java.lang.String" resultType="java.lang.String">
	SELECT pm.`menu_name` AS menuName FROM platform_menu pm WHERE pm.`uuid` IN
	(SELECT prm.`menu_uuid` AS menu_uuid FROM platform_role_menu prm WHERE prm.`role_uuid`=#{roleUuid})
  </select>
  
  <!-- 根据角色uuid删除角色下的菜单权限 -->
  <delete id="deleteMenuByRoleUuid" parameterType="java.lang.String">
  	delete from platform_role_menu
  	where role_uuid=#{roleUuid}
  </delete>
  
  <!-- 根据角色uuid查询角色下现存的用户 -->
  <select id="findRoleUsersCount" parameterType="java.lang.String" resultType="int">
  	SELECT COUNT(id) FROM platform_user_role WHERE role_uuid = #{uuid};
  </select>
  
  <!-- 根据角色名查询角色数量 -->
  <select id="findCountByName" parameterType="java.lang.String" resultType="int">
  	SELECT COUNT(id) FROM platform_role WHERE del_flag is false and role_name = #{name}
  </select>
  
  <!-- 给角色分配初始权限 -->
  <insert id="addInitPerminssion" parameterType="java.lang.String">
  	INSERT INTO platform_role_menu (role_uuid,menu_uuid)
  	VALUES (#{roleUuid},(SELECT UUID FROM platform_menu WHERE menu_name='当前用户信息'))
  </insert>
  
</mapper>